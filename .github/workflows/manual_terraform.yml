name: 'Manual Terraform Deployment'

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'dev'

jobs:
  terraform:
    name: 'Deploy to Environment'
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.1
        with:
          service_account_key: ${{ secrets.DEFAULT_SA_KEY2 }}
          project_id: ${{ secrets.PROJECT_ID }}

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
    
      - name: Decode GCP Credentials
        run: |
          echo '${{ secrets.GCP_SA_KEY_BASE64 }}' | base64 -d > ${{ github.workspace }}/cloud-infra/automateml-3f20c67d2a0a.json
        env:
          GCP_SA_KEY_BASE64: ${{ secrets.GCP_SA_KEY_BASE64 }}

      - name: List files in cloud-infra directory
        run: ls -l ${{ github.workspace }}/cloud-infra/

      - name: Check SHA256 of the service account file
        run: sha256sum ${{ github.workspace }}/cloud-infra/automateml-3f20c67d2a0a.json

      - name: Terraform Init and Plan
        working-directory: ./cloud-infra
        env:
          TF_LOG: DEBUG
        run: |
          terraform init
          terraform plan -out=tfplan


      - name: Hold for approval
        if: github.event_name == 'workflow_dispatch'
        uses: softprops/turnstyle@v1
        with:
          continue-after-seconds: 0 # This will make it wait indefinitely until manually approved
          poll-interval-seconds: 10
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Terraform Apply
        working-directory: ./cloud-infra
        if: github.event_name == 'workflow_dispatch'
        run: |
          terraform apply tfplan
